# swagger.yml

openapi: 3.0.0
info:
  title: "Flask REST API"
  description: "An API about nothing"
  version: "1.0.0"
servers:
  - url: "/api"
paths:
  /people:
    get:
      operationId: "people.read_all"
      tags:
        - "People"
      summary: "Read the list of people"
      responses:
        "200":
          description: "Successfully read people list"
    post:
      operationId: "people.create"
      tags:
        - "People"
      summary: "Create a person"
      requestBody:
        description: "Person structure"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: "Successfully created"
  /people/{lastname}:
    get:
      operationId: "people.read_one"
      tags:
        - "People"
      summary: "Read the one person"
      parameters:
        - $ref: "#/components/parameters/lastname"
      responses:
        "200":
          description: "Successfully read a person"
    put:
      operationId: "people.update"
      tags:
        - "People"
      summary: "Update a person"
      parameters:
        - $ref: "#/components/parameters/lastname"
      responses:
        "200":
          description: "Successfully updated a person"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
    delete:
      operationId: "people.delete"
      tags:
        - "People"
      summary: "Deletes a person"
      parameters:
        - $ref: "#/components/parameters/lastname"
      responses:
        "204":
          description: "Successfully deleted a person"
  /notes:
    post:
      operationId: "notes.create"
      tags:
        - "Notes"
      summary: "Create a note associated with a person"
      requestBody:
        description: "Note to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                personid:
                  type: "integer"
                content:
                  type: "string"
      responses:
        "201":
          description: "Successfully created a note"
  /notes/{noteid}:
    get:
      operationId: "notes.read_one"
      tags:
        - "Notes"
      summary: "Read one note"
      parameters:
        - $ref: "#/components/parameters/noteid"
      responses:
        "200":
          description: "Successfully read one note"
    put:
      tags:
        - "Notes"
      operationId: "notes.update"
      summary: "Update a note"
      parameters:
        - $ref: "#/components/parameters/noteid"
      responses:
        "200":
          description: "Successfully updated a note"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                content:
                  type: "string"
    delete:
      tags:
        - "Notes"
      operationId: "notes.delete"
      summary: "Delete a note"
      parameters:
        - $ref: "#/components/parameters/noteid"
      responses:
        "204":
          description: "Successfully deleted a note"
components:
  schemas:
    Person:
      type: "object"
      required:
        - lastname
        - firstname
      properties:
        title:
          type: "string"
        lastname:
          type: "string"
        firstname:
          type: "string"
  parameters:
    lastname:
      name: "lastname"
      description: "Last name of the person to get"
      in: path
      required: True
      schema:
        type: "string"
    noteid:
      name: "noteid"
      description: "ID of the person note"
      in: path
      required: true
      schema:
        type: "integer"
